---
import { getCollection, render } from "astro:content";

const allTestimonials = await getCollection("testimonials");

// Render each testimonial's content
const testimonialContents = await Promise.all(
  allTestimonials.map(async (testimonial) => {
    const { Content } = await render(testimonial);
    return { ...testimonial, Content };
  })
);

const renderStars = (count: number) => {
  let starsHtml = '';
  for (let i = 0; i < count; i++) {
    starsHtml += `
      <svg class="star-icon w-5 h-5 fill-light-blue" viewBox="0 0 24 24">
        <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z"/>
      </svg>
    `;
  }
  return starsHtml;
};
---

<div class="bg-[url(/images/bg-testimonials.webp)] bg-cover bg-center bg-no-repeat px-4 py-10 md:py-20 overflow-hidden">
  <div class="container mx-auto mh-[335px]">
    <div class="flex gap-4 items-center">
      <img src="/images/icon-house.svg" alt="Home Icon" class="h-auto object-cover" />
      <h2 class="text-primary uppercase font-gothic-demi text-[14px] tracking-wider py-1">
        Testimonials
      </h2>
    </div>
    <h2 class="text-primary font-light text-2xl md:text-4xl mb-10 md:py-2">
      Trusted by Your Neighbors.
    </h2>
    <div class="flex overflow-x-auto snap-x snap-mandatory md:grid md:grid-cols-3 gap-5 font-manrope pb-4 md:overflow-visible md:pb-0">
      {testimonialContents.map(({ data, Content }) => (
        <div class="bg-primary p-10 text-white min-w-full snap-center md:min-w-0">
          <div class="flex justify-left gap-2">
            <Fragment set:html={renderStars(data.stars)} />
          </div>
          <span class="font-bold mt-5 mb-2 text-base md:text-xl flex">{data.title}</span>
          <span class="text-text-light text-xs md:leading-[25px]"><Content /></span>
          <span class="flex font-light text-base md:text mt-5">{data.author}</span>
        </div>
      ))}
    </div>
  </div>
</div>
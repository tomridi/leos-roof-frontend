---
import Layout from '../../layouts/Layout.astro';
import type { ServiceDoc, MediaAsset } from '../../types/payload.ts';

import { RichText } from '@payloadcms/richtext-lexical/react';

import Slideshow from '../../components/Slideshow.tsx';

export async function getStaticPaths() {

    const PAYLOAD_BASE_URL: string = import.meta.env.PUBLIC_PAYLOAD_API_URL;
    const PAYLOAD_SERVICES_API_ENDPOINT: string = `${PAYLOAD_BASE_URL}/services?depth=2`;

    try {
        const response = await fetch(PAYLOAD_SERVICES_API_ENDPOINT);
        
        if (!response.ok) {
            throw new Error(`Failed to fetch services: ${response.status} ${response.statusText}`);
        }

        const data = await response.json();
        const services: ServiceDoc[] = data.docs;

        return services.map((service) => ({
            params: { id: service.id },
            props: { 
                service : {
                    id: service.id,
                    title: service.title,
                    description: service.description,
                    callToAction: service.callToAction,
                    content01: service.content01,
                    content02: service.content02,
                    coverImage: service.coverImage as MediaAsset,
                    gallery: service.gallery.map(item => ({
                        image: item.image as MediaAsset,
                        caption: item.caption || '',
                    })),
                },
            },
        }));

    } catch (error) {
        console.error('Error fetching services:', error);
        return [];

    }
}

const { service } = Astro.props;
const { id, title, description, callToAction, content01, content02, coverImage } = service;

const coverImageAlt = coverImage.alt;
const coverImageUrl = coverImage.url;

const slideshowImages = service.gallery.map(item => ({
  src: item.image.url,
  alt: item.caption || service.title,
}));

console.log("Slideshow Images:", slideshowImages); // Debugging line to check images

---
<Layout title={`Service ${id} - ${title}`} description={description}>
    <div class="container mt-[200px]">
        <h1>ID: {id} // Title: {title}</h1>
        <Slideshow images={slideshowImages} interval={4000} arrows={true} custom_arrows={false} caption={false} bullets={true} client:load />
        <p>{description}</p>
        <p><RichText data={content01} /></p>
        <img src={coverImageUrl} alt={coverImageAlt} class="w-full h-auto mb-4" />
        <p><RichText data={content02} /></p>
        <p>{callToAction}</p>
        
    </div>
</Layout>